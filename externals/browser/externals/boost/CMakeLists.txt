
message(STATUS "@@@ boost")

add_subdirectory(boost)

get_target_property(boost_path Boost::boost INTERFACE_INCLUDE_DIRECTORIES)
if(NOT boost_path)
    message(STATUS "fixing include path for boost")
    file(GLOB_RECURSE boost_path "${CMAKE_CURRENT_BINARY_DIR}/boost/*/asio.hpp")
    get_filename_component(boost_path "${boost_path}" DIRECTORY) # remove asio.hpp
    get_filename_component(boost_path "${boost_path}" DIRECTORY) # parent directory
    set_target_properties(Boost::boost PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${boost_path}")
endif()

macro(strhas name)
    string(FIND "${s}" "${name}" found)
    if(NOT found EQUAL -1)
        set(ok FALSE)
    endif()
endmacro()

if(BUILDSYS_UWP)
    set(extraIncludes "")
    foreach(l Boost_filesystem Boost_iostreams)
        get_target_property(sources ${l} SOURCES)
        set(sources2 "")
        foreach(s ${sources})
            set(ok TRUE)
            strhas("operations.cpp")
            strhas("unique_path.cpp")
            strhas("file_descriptor.cpp")
            strhas("mapped_file.cpp")
            strhas("windows_file_codecvt.cpp")
            if(ok)
                list(APPEND sources2 "${s}")
            else()
                get_filename_component(s "${s}" DIRECTORY)
                list(APPEND extraIncludes "${s}")
            endif()
        endforeach()
        set_target_properties(${l} PROPERTIES SOURCES "${sources2}")
    endforeach()
    target_sources(Boost_filesystem PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/boostDummiesUwp.cpp")
    target_include_directories(Boost_filesystem PRIVATE ${extraIncludes})
endif()

if(BUILDSYS_WASM)
    set_property(TARGET Boost::boost APPEND PROPERTY INTERFACE_COMPILE_DEFINITIONS BOOST_ASIO_DISABLE_STD_STRING_VIEW BOOST_ASIO_DISABLE_STD_EXPERIMENTAL_STRING_VIEW)
endif()
